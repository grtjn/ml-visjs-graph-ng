!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("root.visjs-graph",{url:"/visjs-graph/*id",controller:"visjsGraphViewCtrl",controllerAs:"ctrl",templateUrl:"/visjs-graph/templates/container.html",resolve:{rootObject:function(visjsGraphService,$stateParams){return visjsGraphService.search($stateParams.id).then(function(resp){return resp.data})}}})}angular.module("ml.visjsGraph",["ngVis","ui.bootstrap","ui.router"]).config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function VisjsGraphService(){var api="/v1/resources";this.setApi=function(url){api=url},this.$get=function($http){function search(id){return $http.get(api+"/visjs?rs:subject="+id)}function expand(id){return $http.get(api+"/visjs?rs:expand=true&rs:subject="+encodeURIComponent(id)).then(function(response){return response.data})}var service={search:search,expand:expand};return service}}angular.module("ml.visjsGraph").provider("visjsGraphService",VisjsGraphService)}(),function(){"use strict";function VisjsGraphDirective(){return{restrict:"E",scope:{items:"=items"},templateUrl:"/visjs-graph/visjs-graph.html",controller:"visjsGraphCtrl",controllerAs:"ctrl",link:function(scope,element,attrs){}}}angular.module("ml.visjsGraph").directive("visjsGraph",VisjsGraphDirective)}(),function(){"use strict";function VisjsGraphViewCtrl(rootObject,$scope){var ctrl=this;ctrl.items=rootObject}angular.module("ml.visjsGraph").controller("visjsGraphViewCtrl",VisjsGraphViewCtrl),VisjsGraphViewCtrl.$inject=["rootObject","$scope"]}(),function(){"use strict";function VisjsGraphCtrl(visjsGraphService,$scope,$state,$window,$uibModal,VisDataSet){var nodes,edges,ctrl=this,items=$scope.items,nodeMap={};if(ctrl.newTriple={},ctrl.tripleModal=null,ctrl.label=items.nodes[0].label?items.nodes[0].label:"this node",$window.scrollTo(0,0),ctrl.graphData={nodes:null,edges:null},items){for(var i=0;i<items.nodes.length;i++)nodeMap[items.nodes[i].id]=items.nodes[i];nodes=new VisDataSet(items.nodes),edges=new VisDataSet(items.links)}else nodes=new VisDataSet([]),edges=new VisDataSet([]);ctrl.graphData.nodes=nodes,ctrl.graphData.edges=edges,$("ul.nav-tabs a").on("click",function(e){ctrl.network.fit()}),ctrl.physicsEnabled=!0,ctrl.physics="forceAtlas2Based",ctrl.layoutSelect="standard",ctrl.graphOptions={layout:{hierarchical:!1,randomSeed:2,improvedLayout:!0},interaction:{navigationButtons:!0},height:"600px",manipulation:{enabled:!1,initiallyActive:!1,addNode:!1,deleteNode:!1,deleteEdge:!1,editEdge:!1,addEdge:function(edgeData,callback){edgeData.from===edgeData.to||(ctrl.linkData.primaryId=edgeData.from,ctrl.linkData.secondaryId=edgeData.to,ctrl.linkData.linkType="newLink",ctrl.addLink(edgeData))}},locales:{en:{addEdge:"Add Relationship / Merge",edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Node",editNode:"Edit Node",editEdge:"Edit Edge",addDescription:"Click in an empty space to place a new node.",edgeDescription:"Click on a node and drag the relationship to another node to connect or merge them.",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."}},groups:{"http://xmlns.com/foaf/0.1/Person":{color:{highlight:{background:"white",border:"#860082"},background:"white",border:"black"},image:"bower_components/ml-visjs-graph-ng/dist/images/person.png"}},nodes:{size:30,borderWidth:2,shadow:!0,borderWidthSelected:6,shape:"circularImage",image:"bower_components/ml-visjs-graph-ng/dist/images/generic.png",color:{highlight:{background:"white",border:"#860082"},background:"white",border:"black"},font:{size:12}},physics:{enabled:ctrl.physicsEnabled,barnesHut:{gravitationalConstant:-8e3,centralGravity:.1,springLength:200,springConstant:.04,damping:.5,avoidOverlap:0},forceAtlas2Based:{gravitationalConstant:-200,centralGravity:.01,springLength:100,springConstant:.08,damping:.4,avoidOverlap:0},repulsion:{centralGravity:.1,springLength:200,springConstant:.05,nodeDistance:200,damping:.09},hierarchicalRepulsion:{centralGravity:0,springLength:100,springConstant:.01,nodeDistance:120,damping:.09},maxVelocity:150,minVelocity:6,solver:ctrl.physics,stabilization:{enabled:!0,iterations:1e3,updateInterval:100,onlyDynamicEdges:!1,fit:!0},timestep:.5,adaptiveTimestep:!0},edges:{color:"#860082",width:2,shadow:!0,arrows:{to:{enabled:!0,scaleFactor:.75}},font:{size:10,align:"top"},smooth:{type:"curvedCW",roundness:.1}}},ctrl.graphEvents={onload:function(network){ctrl.network=network},oncontext:function(params){var coordinates=params.pointer.DOM,targetNode=ctrl.network.getNodeAt(coordinates);return targetNode&&"/"!==ctrl.getNodeLabel(targetNode).charAt(0)&&$state.go("root.view",{uri:targetNode+".xml"}),params.event.preventDefault()},doubleClick:function(params){var nodeUri=params.nodes[0];visjsGraphService.expand(nodeUri).then(ctrl.updateGraph)},afterDrawing:function(ctx){var radius=10,selectedNode=null,selectedData=ctrl.network.getSelectedNodes();selectedData&&selectedData.length>0&&(selectedNode=selectedData[0]);var nodeIds=ctrl.getNodeIds(),nodePosition=ctrl.network.getPositions(nodeIds);if(nodePosition)for(var i=0;i<nodeIds.length;i++){var nodePos=nodePosition[nodeIds[i]];if(nodePos){var tmpNode=ctrl.getNode(nodeIds[i]);tmpNode&&tmpNode.linkCount&&tmpNode.linkCount>0&&(radius=tmpNode.linkCount>=100&&tmpNode.linkCount<1e3?15:tmpNode.linkCount>=1e3?20:10,ctx.strokeStyle="white",ctx.fillStyle="#828600",ctx.lineWidth=1,ctx.circle(nodePos.x-20,nodePos.y-20,radius),ctx.fill(),ctx.stroke(),ctx.font="8pt Lucida",ctx.strokeText(tmpNode.linkCount,nodePos.x-20,nodePos.y-24))}}}},ctrl.linkData={},$scope.$watch("ctrl.physicsEnabled",function(newValue,oldValue){newValue!==oldValue&&ctrl.physicsUpdated()}),$scope.$watch("ctrl.physics",function(newValue,oldValue){newValue!==oldValue&&ctrl.physicsUpdated()}),$scope.$watch("ctrl.layoutHierarchy",function(newValue,oldValue){newValue!==oldValue&&ctrl.layoutUpdated()}),$scope.$watch("ctrl.layoutSelect",function(newValue,oldValue){newValue!==oldValue&&ctrl.layoutUpdated()}),ctrl.getNodeLabel=function(nodeId){var label=nodeMap[nodeId].label;return label},ctrl.getNode=function(nodeId){return nodeMap[nodeId]},ctrl.getNodeIds=function(){var nodes=[];for(var key in nodeMap)nodes.push(nodeMap[key].id);return nodes},ctrl.updateGraph=function(data){if(items=data&&data.data?data.data:data,items&&items.nodes){for(var i=0;i<items.nodes.length;i++)nodeMap[items.nodes[i].id]=items.nodes[i];ctrl.refreshGraph()}},ctrl.refreshGraph=function(){nodes&&nodes.update(items.nodes),edges&&edges.update(items.links)},ctrl.physicsUpdated=function(){ctrl.network.setOptions({physics:{enabled:ctrl.physicsEnabled,solver:ctrl.physics}})},ctrl.layoutUpdated=function(){var options={edges:{smooth:{type:"curvedCW",roundness:.1}}};"standard"===ctrl.layoutSelect?options.layout={hierarchical:!1}:"hierarchyTop"===ctrl.layoutSelect?(ctrl.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"UD",sortMethod:"directed"}}):"hierarchyBottom"===ctrl.layoutSelect?(ctrl.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"DU",sortMethod:"directed"}}):"hierarchyLeft"===ctrl.layoutSelect?(ctrl.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"LR",sortMethod:"directed"}}):(ctrl.physics="hierarchicalRepulsion",options.layout={hierarchical:{direction:"RL",sortMethod:"directed"}});var physicsOptions={physics:{enabled:ctrl.physicsEnabled,solver:ctrl.physics}};ctrl.network.setOptions(options),ctrl.network.setOptions(physicsOptions)}}angular.module("ml.visjsGraph").controller("visjsGraphCtrl",VisjsGraphCtrl),VisjsGraphCtrl.$inject=["visjsGraphService","$scope","$state","$window","$uibModal","VisDataSet"]}();